/*
 * OpenID Attacker
 * (C) 2015 Christian Mainka & Christian Ko√ümann
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 51
 * Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 */
package wsattacker.sso.openid.attacker.gui.log;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import javax.swing.AbstractListModel;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextPane;
import javax.swing.LayoutStyle;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.SwingBindings;
import wsattacker.sso.openid.attacker.controller.ServerController;
import wsattacker.sso.openid.attacker.gui.server.DateRenderer;
import wsattacker.sso.openid.attacker.gui.server.IdpTypeRenderer;
import wsattacker.sso.openid.attacker.gui.server.TypeRenderer;
import wsattacker.sso.openid.attacker.log.RequestLogger;
import wsattacker.sso.openid.attacker.log.RequestType;
import wsattacker.sso.openid.attacker.server.IdpType;

public class LogGui extends javax.swing.JPanel {

    /**
     * Creates new form ServerConfigurationGui
     */
    public LogGui() {
        initComponents();
        logTable.setDefaultRenderer(Date.class, new DateRenderer());
        logTable.setDefaultRenderer(RequestType.class, new TypeRenderer());
        logTable.setDefaultRenderer(IdpType.class, new IdpTypeRenderer());
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        controller = new ServerController();
        jScrollPane1 = new JScrollPane();
        jList1 = new JList();
        requestConverter = new SelectedRequestConverter();
        responseConverter = new SelectedResponseConverter();
        title = new JLabel();
        logScrollPane = new JScrollPane();
        logTable = new JTable();
        jLabel1 = new JLabel();
        requestScrollPane = new JScrollPane();
        request = new JTextPane();
        responseScrollPane = new JScrollPane();
        response = new JTextPane();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jButton1 = new JButton();

        jList1.setModel(new AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            @Override
			public int getSize() { return strings.length; }
            @Override
			public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setName("Log Viewer"); // NOI18N

        title.setFont(new Font("Dialog", 1, 24)); // NOI18N
        title.setText("Log Viewer");

        logTable.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);

        ELProperty eLProperty = ELProperty.create("${requestLog}");
        JTableBinding jTableBinding = SwingBindings.createJTableBinding(AutoBinding.UpdateStrategy.READ, controller, eLProperty, logTable, "log");
        JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${type}"));
        columnBinding.setColumnName("Type");
        columnBinding.setColumnClass(RequestType.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${date}"));
        columnBinding.setColumnName("Date");
        columnBinding.setColumnClass(Date.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${text}"));
        columnBinding.setColumnName("Text");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${idpType}"));
        columnBinding.setColumnName("IdP Type");
        columnBinding.setColumnClass(IdpType.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        logScrollPane.setViewportView(logTable);

        jLabel1.setFont(new Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("Select a log entry");

        request.setEditable(false);

        Binding binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ, logTable, ELProperty.create("${selectedElement}"), request, BeanProperty.create("text"), "requestText");
        binding.setSourceNullValue("Select an entry");
        binding.setSourceUnreadableValue("Select an entry");
        binding.setConverter(requestConverter);
        bindingGroup.addBinding(binding);

        requestScrollPane.setViewportView(request);

        response.setEditable(false);

        binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ, logTable, ELProperty.create("${selectedElement}"), response, BeanProperty.create("text"), "responseText");
        binding.setSourceNullValue("Select an entry");
        binding.setSourceUnreadableValue("Select an entry");
        binding.setConverter(responseConverter);
        bindingGroup.addBinding(binding);

        responseScrollPane.setViewportView(response);

        jLabel2.setText("Request:");

        jLabel3.setText("Response");

        jButton1.setText("Clear Log");
        jButton1.addActionListener(new ActionListener() {
            @Override
			public void actionPerformed(ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(logScrollPane, GroupLayout.Alignment.TRAILING)
                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(requestScrollPane, GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                            .addComponent(title)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(responseScrollPane, GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)))
                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logScrollPane, GroupLayout.PREFERRED_SIZE, 137, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(requestScrollPane, GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(responseScrollPane, GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1))
        );

        getAccessibleContext().setAccessibleName("Server Configuration");

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        RequestLogger.getInstance().clear();
    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ServerController controller;
    private JButton jButton1;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JList jList1;
    private JScrollPane jScrollPane1;
    private JScrollPane logScrollPane;
    private JTable logTable;
    private JTextPane request;
    private SelectedRequestConverter requestConverter;
    private JScrollPane requestScrollPane;
    private JTextPane response;
    private SelectedResponseConverter responseConverter;
    private JScrollPane responseScrollPane;
    private JLabel title;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
